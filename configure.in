AC_INIT(src/main.c)
AC_PREREQ(2.50)
dnl Process this file with autoconf to produce a configure script.

AM_INIT_AUTOMAKE(icecast,2.0-alpha-2)
AM_CONFIG_HEADER(config.h)

AC_PROG_CC
AC_CANONICAL_HOST
AM_PROG_LIBTOOL

dnl Set some options based on environment

case "$host" in
    *openbsd*)
    ;;
    *) AC_DEFINE(_XOPEN_SOURCE, 600, [Define if you have POSIX and XPG specifications])
    ;;
esac
if test -z "$GCC"; then
    case $host in 
        *-*-irix*)
                DEBUG="-g -signed -D_REENTRANT" 
                XIPH_CFLAGS="-O2 -w -signed -D_REENTRANT"
                PROFILE="-p -g3 -O2 -signed -D_REENTRANT"
                ;;
        *-*-solaris*)
                DEBUG="-v -g -D_REENTRANT"
                XIPH_CFLAGS="-xO4 -fast -w -fsimple -native -xcg92 -D_REENTRANT"
                PROFILE="-v -xpg -g -xO4 -fast -native -fsimple -xcg92 -Dsuncc -D_REENTRANT"
                ;;
        *)
                DEBUG="-g -D_REENTRANT"
                XIPH_CFLAGS="-O -D_REENTRANT"
                PROFILE="-g -p -D_REENTRANT"
                ;;
    esac
else
    case $host in 
        *-*-linux*)
                DEBUG="-g -Wall -fsigned-char -D_GNU_SOURCE"
                XIPH_CPPFLAGS="-ffast-math -fsigned-char -D_GNU_SOURCE"
                PROFILE="-Wall -W -pg -g -ffast-math -fsigned-char -D_GNU_SOURCE"
                ;;
        sparc-sun-solaris*)
                AC_DEFINE(__EXTENSIONS__, 1, [define to 1 to get resolve header problem on solaris])
                DEBUG="-g -Wall -fsigned-char -mv8"
                XIPH_CPPFLAGS="-ffast-math -fsigned-char -mv8"
                PROFILE="-pg -g -fsigned-char -mv8" 
                ;;
        *-pc-solaris*)
                DEBUG="-g -Wall -fsigned-char"
                XIPH_CPPFLAGS="-ffast-math -fsigned-char"
                PROFILE="-pg -g -fsigned-char" 
                ;;
        *freebsd*)
                DEBUG="-g -Wall -fsigned-char"
                XIPH_CPPFLAGS="-fsigned-char"
                PROFILE="-g -pg -fsigned-char" 
                ;;
        *)
                DEBUG="-g -Wall -fsigned-char"
                XIPH_CPPFLAGS="-Wall -fsigned-char"
                PROFILE="-g -pg -Wall -fsigned-char" 
                ;;
    esac
fi

dnl Checks for programs.

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC

AC_CHECK_HEADER(pwd.h, AC_DEFINE(CHUID, 1, [Define if you have pwd.h]),,)
AC_CHECK_HEADER(unistd.h, AC_DEFINE(CHROOT, 1, [Define if you have unistd.h]),,)

dnl Checks for typedefs, structures, and compiler characteristics.

dnl Check for types

dnl Checks for library functions.
AC_CHECK_FUNCS(nanosleep poll)
XIPH_NET

dnl -- configure options --

XIPH_PATH_XSLT
XIPH_VAR_APPEND([XIPH_CPPFLAGS],[$XSLT_CFLAGS])
XIPH_VAR_PREPEND([XIPH_LIBS],[$XSLT_LIBS])

XIPH_PATH_VORBIS(, AC_MSG_ERROR([must have Ogg Vorbis v1.0 installed!]))
XIPH_VAR_APPEND([XIPH_CPPFLAGS],[$VORBIS_CFLAGS])
XIPH_VAR_PREPEND([XIPH_LIBS],[$VORBIS_LIBS])

ACX_PTHREAD(, AC_MSG_ERROR([POSIX threads missing]))
XIPH_VAR_APPEND([XIPH_CFLAGS],[$PTHREAD_CFLAGS])
XIPH_VAR_APPEND([XIPH_CPPFLAGS],[$PTHREAD_CPPFLAGS])
XIPH_VAR_PREPEND([XIPH_LIBS],[$PTHREAD_LIBS])

dnl -- YP support --
AC_ARG_ENABLE([yp],
        AC_HELP_STRING([--disable-yp],[disable YP directory support]))
if test "x$enable_yp" != "xno"
then
XIPH_PATH_CURL([
  AC_CHECK_DECL([CURLOPT_NOSIGNAL], [
    AC_DEFINE([USE_YP], 1, [Define to compile in YP support code])
    ICECAST_OPTIONAL="$ICECAST_OPTIONAL geturl.o yp.o"
    ], [
    if test "x$enable_yp" != "xyes"
    then
      AC_MSG_NOTICE([Your curl dev files are too old (7.10 or above required), YP disabled])
    else
      AC_MSG_ERROR([Your curl dev files are too old (7.10 or above required)])
    fi
    ], [#include <curl/curl.h>])
  ], [
  if test "x$enable_yp" != "xyes"
  then
    AC_MSG_NOTICE([libcurl not found, YP disabled])
  else
    AC_MSG_ERROR([libcurl not found])
  fi
  ])
fi
XIPH_VAR_APPEND([XIPH_CFLAGS],[$CURL_CFLAGS])
XIPH_VAR_PREPEND([XIPH_LIBS],[$CURL_LIBS])

dnl Make substitutions

AC_SUBST(XIPH_CPPFLAGS)
AC_SUBST(XIPH_CFLAGS)
AC_SUBST(XIPH_LIBS)
AC_SUBST(PTHREAD_CPPFLAGS)
AC_SUBST(PTHREAD_CFLAGS)
AC_SUBST(PTHREAD_LIBS)
AC_SUBST(LIBTOOL_DEPS)
AC_SUBST(LIBS)
AC_SUBST(DEBUG)
AC_SUBST(CFLAGS)
AC_SUBST(PROFILE)
AC_SUBST(ICECAST_OPTIONAL)

AC_OUTPUT(Makefile conf/Makefile src/Makefile src/avl/Makefile src/httpp/Makefile src/thread/Makefile src/log/Makefile src/net/Makefile src/timing/Makefile doc/Makefile web/Makefile admin/Makefile win32/Makefile win32/res/Makefile)
